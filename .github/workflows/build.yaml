name: CI

on: [push]

jobs:

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100'
      - uses: xt0rted/dotnet-format-problem-matcher@v1
      - run: dotnet tool restore
      - run: dotnet restore
      - name: dotnet format check
        run: dotnet format --dry-run --check
      - name: test
        env:
          MANDRILL_API_KEY: ${{ secrets.MANDRILL_API_KEY }}
          MANDRILL_SENDING_DOMAIN: ${{ secrets.MANDRILL_SENDING_DOMAIN }}
        run: dotnet test tests --configuration Release --logger "console;verbosity=normal" -p:CollectCoverage=true -p:CoverletOutputFormat=lcov -p:CoverletOutput=./coverage.lcov
      - name: Push coverage result
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./tests/coverage.lcov

  publish-nuget:
    needs: test
    runs-on: windows-latest
    # tag a release as v1.0.0....
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100'

      - name: Extract tag version
        run: |
          $env:GITHUB_REF -match "^refs/tags/v(.+)"
          $versionTag = $Matches[1]
          echo "VERSION_TAG=$versionTag" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: pack
        run: dotnet pack src/Mandrill.net --configuration Release -p:PackageVersion=$env:VERSION_TAG -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg --output artifacts

      - name: push
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push artifacts\*.nupkg -k $env:NUGET_API_KEY -s https://api.nuget.org/v3/index.json
